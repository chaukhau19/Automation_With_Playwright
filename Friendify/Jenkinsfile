pipeline {
  agent any
  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Install Dependencies') {
      steps {
        dir(path: 'Automation_With_Playwright/Friendify') {
          sh 'npm install'
          sh 'npx playwright install'
          sh 'npx playwright test FD_Actions.spec.js --headed --reporter=line --workers=1'
        }

      }
    }

    stage('Archive Test Results') {
      steps {
        dir(path: 'Automation_With_Playwright/Friendify') {
          archiveArtifacts(artifacts: 'playwright-report/**', allowEmptyArchive: true)
        }

      }
    }

    stage('CI: Run Tests') {
      steps {
        dir(path: "${SERVER_PATH}") {
          script {
            if (isUnix()) {
              sh "${COMMANDS}"  // For Unix-based systems
            } else {
              bat "${COMMANDS}"  // For Windows-based systems
            }
          }

        }

        echo 'Tests executed'
      }
    }

  }
  post {
    always {
      script {
        def status = currentBuild.result ?: 'SUCCESS'
        echo "Build status: ${status}"
        sh "rm -rf ./* ./.??*"
      }

    }

  }
}